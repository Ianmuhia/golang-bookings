{{define "base"}}
    <html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- Bootstrap CSS -->

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
              crossorigin="anonymous">
        <link rel="stylesheet"
              href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">

        <title>Bookings</title>
    </head>

    <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="/generals-quarters" id="navbarDropdown" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/generals-quarters">Generals quarter's</a></li>
                            <li><a class="dropdown-item" href="/majors-suite">Major Suite</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link " href="/search-availability">Book Now</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link " href="/contact">Contact</a>
                    </li>
                </ul>

            </div>
        </div>
    </nav>
    {{block "content" .}}

    {{end}}


    <div class="row my-footer ">

        <div class="col ">
            left
        </div>

        <div class="col ">
            middle
        </div>

        <div class="col ">
            right
        </div>
    </div>
    {{block "js" .}}
    {{end}}
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
            integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
            integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/notie"></script>
    <script>

        let attention = Prompt();


        function Prompt() {
            let toast = function (c) {
                const {
                    msg = "",
                    icon = "success",
                    position = "top-end"
                } = c;
                const Toast = Swal.mixin({
                    toast: true,
                    position: position,
                    title: msg,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({})
            }
            let success = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = ""
                } = c;
                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            async function custom(c) {
                const {
                    msg = "",
                    title = "",
                } = c;
                const {
                    value: result
                } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        if (c.willOpen !== undefined) {
                            c.willOpen();
                        }
                    },

                    didOpen: () => {
                        if (c.willOpen !== undefined) {
                            c.willOpen();
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById('start').value,
                            document.getElementById('end').value
                        ]
                    }
                })

                if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        if (result.value !== "") {
                            if (c.callback !== undefined) {
                                c.callback(result);
                            } else {
                                c.callback(false);
                            }
                        } else {
                            c.callback(false);

                        }
                    }
                }
            }

            return {
                toast: toast,
                success: success,
                custom: custom
            }
        }

        function notifyModal(title, text, icon, confirmationButton) {
            Swal.fire({
                title: title,
                text: text,
                icon: icon,
                confirmButtonText: confirmationButton
            })
        }

        function notify(msg, msgType) {
            console.log(msg, msgType)
            notie.alert({
                type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,

            })
        }


        {{with  .Error}}
        notify("{{.}}", "error")
        {{end}}

        {{with  .Flash}}
        notify("{{.}}", "success")
        {{end}}

        {{with  .Warning}}
        notify("{{.}}", "warning")
        {{end}}

    </script>


    </body>

    </html>
{{end}}